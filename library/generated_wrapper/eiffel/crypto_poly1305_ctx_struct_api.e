note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class CRYPTO_POLY1305_CTX_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	r: POINTER
			-- Access member `r`
		require
			exists: exists
		do
			Result := c_r (item)
		ensure
			result_correct: Result = c_r (item)
		end

	h: POINTER
			-- Access member `h`
		require
			exists: exists
		do
			Result := c_h (item)
		ensure
			result_correct: Result = c_h (item)
		end

	c: POINTER
			-- Access member `c`
		require
			exists: exists
		do
			Result := c_c (item)
		ensure
			result_correct: Result = c_c (item)
		end

	pad: POINTER
			-- Access member `pad`
		require
			exists: exists
		do
			Result := c_pad (item)
		ensure
			result_correct: Result = c_pad (item)
		end

	c_idx: INTEGER
			-- Access member `c_idx`
		require
			exists: exists
		do
			Result := c_c_idx (item)
		ensure
			result_correct: Result = c_c_idx (item)
		end

	set_c_idx (a_value: INTEGER) 
			-- Change the value of member `c_idx` to `a_value`.
		require
			exists: exists
		do
			set_c_c_idx (item, a_value)
		ensure
			c_idx_set: a_value = c_idx
		end

feature {NONE} -- Implementation wrapper for struct crypto_poly1305_ctx

	sizeof_external: INTEGER 
		external
			"C inline use <monocypher.h>"
		alias
			"sizeof(crypto_poly1305_ctx)"
		end

	c_r (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <monocypher.h>"
		alias
			"[
				((crypto_poly1305_ctx*)$an_item)->r
			]"
		end

	c_h (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <monocypher.h>"
		alias
			"[
				((crypto_poly1305_ctx*)$an_item)->h
			]"
		end

	c_c (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <monocypher.h>"
		alias
			"[
				((crypto_poly1305_ctx*)$an_item)->c
			]"
		end

	c_pad (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <monocypher.h>"
		alias
			"[
				((crypto_poly1305_ctx*)$an_item)->pad
			]"
		end

	c_c_idx (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <monocypher.h>"
		alias
			"[
				((crypto_poly1305_ctx*)$an_item)->c_idx
			]"
		end

	set_c_c_idx (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <monocypher.h>"
		alias
			"[
				((crypto_poly1305_ctx*)$an_item)->c_idx =  (size_t)$a_value
			]"
		ensure
			c_idx_set: a_value = c_c_idx (an_item)
		end

end
